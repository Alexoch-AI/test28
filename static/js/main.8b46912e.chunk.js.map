{"version":3,"sources":["components/Table/table.module.scss","components/ModalAddItem/ModalAddItem.jsx","components/PersonRow/PersonRow.jsx","components/Table/Table.jsx","App.js","index.js"],"names":["module","exports","ModalAddItem","active","setActive","children","className","onClick","e","stopPropagation","PersonRow","user","clearArr","Days","map","el","hoursTimeUser","minuteTimeUser","i","count","Number","Date","split","splice","null","style","leftColumn","Fullname","startTime","Start","endTime","End","hours","minutes","Math","random","rightColumn","ceil","dataJson","require","Table","useState","modalActive","setModalActive","sortMonthly","setSortMonthly","covid","modalData","setModalData","currentPage","setCurrentPage","countResolve","setCountResolve","countPages","length","arrayPages","push","monthDay","clickHandler","a","fetch","method","headers","json","serverresponse","provinces","main","modd","slice","index","id","confirmed","recovered","deaths","paggDiv","paggHandler","pagg__active","pagg","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8b46912e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagg\":\"table_pagg__5HNxB\",\"pagg__active\":\"table_pagg__active__2d797\",\"modd\":\"table_modd__2szN-\",\"main\":\"table_main__XeENb\",\"paggDiv\":\"table_paggDiv__37R6Q\",\"leftColumn\":\"table_leftColumn__60zTr\",\"rightColumn\":\"table_rightColumn__1IR27\"};","import React from \"react\";\nimport \"./modalAddItem.css\";\n\nfunction ModalAddItem({ active, setActive, children }) {\n  return (\n    <div\n      className={active ? \"modal active\" : \"modal\"}\n      onClick={() => setActive(false)}\n    >\n      <div\n        className={active ? \"modal__content active\" : \"modal__content\"}\n        onClick={(e) => e.stopPropagation()}\n      >\n        {children}\n      </div>\n    </div>\n  );\n}\n\nexport default ModalAddItem;\n","import React from \"react\";\nimport style from \"../Table/table.module.scss\";\n\nfunction PersonRow({ user }) {\n  const clearArr = user.Days.map((el) => el);\n  let hoursTimeUser = 0;\n  let minuteTimeUser = 0;\n\n  for (let i = 0; i < 31; i++) {\n    const day = Number(clearArr[i]?.Date?.split(\"-\")[2]);\n    let count = 1;\n    if (day !== i + count) {\n      clearArr.splice(i, 0, { null: 0 });\n      count++;\n    }\n  }\n\n  return (\n    <tr>\n      <td className={style.leftColumn}>{user.Fullname}</td>\n      {clearArr.map((el, i) => {\n        if (el.Date) {\n          const startTime = el.Start.split(\"-\");\n          const endTime = el.End.split(\"-\");\n          const hours = (Number(startTime[0]) - Number(endTime[0])) * -1;\n          let minutes = Number(startTime[1]) - Number(endTime[1]);\n          if (minutes < 0) {\n            minutes = minutes * -1;\n          }\n          hoursTimeUser += hours;\n          minuteTimeUser += minutes;\n          return <td key={Math.random()}>{`${hours}h.${minutes}m`}</td>;\n        }\n        return <td key={Math.random()}>0</td>;\n      })}\n      <td className={style.rightColumn}>\n        {Math.ceil(hoursTimeUser + minuteTimeUser / 60)} h.\n      </td>\n    </tr>\n  );\n}\n\nexport default PersonRow;\n","import React, { useState } from \"react\";\nimport ModalAddItem from \"../ModalAddItem/ModalAddItem\";\nimport PersonRow from \"../PersonRow/PersonRow\";\nimport style from \"./table.module.scss\";\nlet dataJson = require(\"../../data.json\");\n\nfunction Table() {\n  const [modalActive, setModalActive] = useState(false);\n  const [sortMonthly, setSortMonthly] = useState(false);\n\n  const [modalData, setModalData] = useState({\n    covid: null,\n    el: null,\n  });\n  const [currentPage, setCurrentPage] = useState(1);\n  const [countResolve, setCountResolve] = useState(10);\n\n  const countPages = Math.ceil(dataJson.length / 10);\n\n  const arrayPages = [];\n  for (let i = 1; i <= countPages; i++) {\n    arrayPages.push(i);\n  }\n\n  const monthDay = [];\n  for (let i = 1; i <= 31; i++) {\n    monthDay.push(i);\n  }\n\n  const clickHandler = async (el) => {\n    const a = await fetch(\n      `https://covid-19-data.p.rapidapi.com/report/country/name?name=russia&date=2020-05-${el}`,\n      {\n        method: \"GET\",\n        headers: {\n          \"x-rapidapi-host\": \"covid-19-data.p.rapidapi.com\",\n          \"x-rapidapi-key\":\n            \"f7e5129388mshd71bc2096ae46c7p15f887jsn533233b1a6c2\",\n        },\n      }\n    );\n    let serverresponse = await a.json();\n    setModalData({ covid: serverresponse[0]?.provinces[0], el: el });\n    setModalActive(true);\n  };\n\n  const paggHandler = (el) => {\n    setCurrentPage(el);\n    setCountResolve(el * 10);\n  };\n\n  return (\n    <>\n      <div className={style.main}>\n        <table>\n          <thead>\n            <tr>\n              <th>Name</th>\n              {monthDay.map((el) => (\n                <th\n                  className={style.modd}\n                  onClick={() => clickHandler(el)}\n                  key={el}\n                >\n                  {el}\n                </th>\n              ))}\n              <th\n                className={style.rightColumn}\n                onClick={() => setSortMonthly(true)}\n              >\n                Monthly total\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            {dataJson.slice(countResolve - 10, countResolve).map((el, i) => (\n              <PersonRow\n                key={el.id}\n                user={el}\n                index={i}\n                sortMonthly={sortMonthly}\n                setSortMonthly={setSortMonthly}\n              />\n            ))}\n          </tbody>\n        </table>\n        <ModalAddItem active={modalActive} setActive={setModalActive}>\n          <p>\n            На 2020.05.{modalData?.el} в России обнаружено: подтверждено -{\" \"}\n            {modalData?.covid?.confirmed}, вылечено -{\" \"}\n            {modalData?.covid?.recovered}, умерло - {modalData?.covid?.deaths},\n            болеет - {modalData?.covid?.active}\n          </p>\n        </ModalAddItem>\n      </div>\n      <div className={style.paggDiv}>\n        {arrayPages.map((el, index) => (\n          <span\n            onClick={() => paggHandler(el)}\n            className={currentPage === el ? style.pagg__active : style.pagg}\n            key={index}\n          >\n            {el}\n          </span>\n        ))}\n      </div>\n    </>\n  );\n}\n\nexport default Table;\n","import './App.css';\nimport Table from './components/Table/Table';\n\nfunction App() {\n\n  return (\n    <div>\n      <Table />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}